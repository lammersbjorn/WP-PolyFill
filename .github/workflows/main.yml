# This is a basic workflow to help you get started with Actions

name: Upload Release Asset

# # Controls when the action will run.
# on:
#   # Triggers the workflow on push or pull request events but only for the master branch
#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build Chrome and Firefox Extensions
        run: |
          echo 'Building Chrome extension...'
          # Create chrome build directory
          mkdir -p build/chrome

          # Copy all source files with new structure
          cp -r src/* build/chrome/

          # Use Chrome-specific manifest
          cp src/manifests/chrome.json build/chrome/manifest.json

          # Remove manifests directory from build (not needed in final package)
          rm -rf build/chrome/manifests

          # Remove docs directory from build (not needed in final package)
          rm -rf build/chrome/docs

          # Create zip for Chrome
          cd build/chrome
          zip -r ../../chrome-extension.zip . -x "*.DS_Store" "*.git*" "*/node_modules/*"
          cd ../..

          echo 'Building Firefox extension...'
          # Create firefox build directory
          mkdir -p build/firefox

          # Copy all source files with new structure
          cp -r src/* build/firefox/

          # Use Firefox-specific manifest
          cp src/manifests/firefox.json build/firefox/manifest.json

          # Remove manifests directory from build (not needed in final package)
          rm -rf build/firefox/manifests

          # Remove docs directory from build (not needed in final package)
          rm -rf build/firefox/docs

          # Create zip for Firefox
          cd build/firefox
          zip -r ../../firefox-addon.zip . -x "*.DS_Store" "*.git*" "*/node_modules/*"
          cd ../..

          echo 'Build completed!'
          ls -la *.zip
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ### Installation
            - **Chrome**: Download `chrome-extension.zip` and load as unpacked extension
            - **Firefox**: Download `firefox-addon.zip` and install as temporary add-on
          draft: false
          prerelease: false
      - name: Upload Chrome Extension Release Asset
        id: upload-chrome-extension-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./chrome-extension.zip
          asset_name: chrome-extension.zip
          asset_content_type: application/zip
      - name: Upload Firefox addon Release Asset
        id: upload-firefox-addon-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./firefox-addon.zip
          asset_name: firefox-addon.zip
          asset_content_type: application/zip
